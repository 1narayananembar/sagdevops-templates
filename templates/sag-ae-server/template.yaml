alias: sag-ae-server
description: The minimal required template can be used to install Analytic Engine

environments:

  default:                                  # defaults
    
    
    optimize.fixes:     ALL                 #Specifies the list of fixes to be installed
    optimize.host:  ${}                     #Specifies target host where Analytic Engine will be installed
    optimize.jms.protocol:          nsp     #Specifies the protocol of target JMS with which Analytic Engine sould be configured
    optimize.jms.host:              ${}     #Specifies the host name of target JMS with which Analytic Engine sould be configured
    optimize.jms.port:              9000    #Specifies the port number of target JMS with which Analytic Engine sould be configured
    optimize.config.agent.protocol: http    #Specifies the protocol of Analytic Engine configuration agent
    optimize.config.agent.host:     ${}     #Specifies the host of Analytic Engine configuration agent
    optimize.config.agent.port:     15000   #Specifies the port of Analytic Engine configuration agent
    optimize.mws.protocol:          http    #Specifies the protocol of MWS with which Analytic Engine sould be configured
    optimize.mws.host:              ${}     #Specifies the host name of MWS with which Analytic Engine sould be configured
    optimize.mws.port:              8585    #Specifies the host name of MWS with which Analytic Engine sould be configured
    optimize.wsdc.protocol:         http    #Specifies the protocol of web service data collector with which Analytic Engine sould be configured
    optimize.wsdc.host:             ${}     #Specifies the host of web service data collector with which Analytic Engine sould be configured
    optimize.wsdc.port:             12503   #Specifies the port number of web service data collector with which Analytic Engine sould be configured
    optimize.db.type:               ${}                     #it requires SQLSERVER, ORACLE, DB2
    optimize.db.name:               ${}                     # Database name
    optimize.jdbc.pool.alias:       ${optimize.db.name}
    
    db.host:             ${}                                # REQUIRED: Database server hostname
    db.port:             ${}                                # REQUIRED: Database server port
    
    db.username:         ${}                                # Database username
    db.password:         ${}                                # Database password
    db.url:              "jdbc:wm:${db.type}://${db.host}:${db.port};databaseName=${optimize.db.name}"   //Database URL
    jdbc.pool.minSize: 8                    #Minimum JDBC pool size       
    jdbc.pool.maxSize: 36                   #Maximum JDBC pool size 
    jdbc.pool.maxIdleTime: 20               #Maximum Idle time 
    jdbc.pool.rampUpDelay: 500
    jdbc.pool.retries: 8
    jdbc.pool.retriesBackoff: 500
    jdbc.pool.maxStatementsInCache: 0

layers:
  runtime:
    description: AE install
    productRepo: ${repo.product}                            # default repository to install products from
    fixRepo:     ${repo.fix}                                # default repository to install fixes from
    templates:   
      - optimize-tuneup                                     # template to apply

templates:
  

  optimize-tuneup:
    descriptino: ae-install
    fixes: ${optimize.fixes}
    products:
      optimizeAnalysis:
        default:
          configuration:
            optimizeAnalysis-analysis:
              COMMON-COMPONENT-ENDPOINTS:
                COMMON-COMPONENT-ENDPOINTS-JMS-Provider:
                  "@alias":   JMS-Provider
                  Transport:
                    Protocol: ${optimize.jms.protocol}
                    Host:     ${optimize.jms.host}
                    Port:     ${optimize.jms.port}
                COMMON-COMPONENT-ENDPOINTS-Configuration-Agent:
                  "@alias":   Configuration-Agent
                  Transport:
                    Protocol: ${optimize.config.agent.protocol}
                    Host:     ${optimize.config.agent.host}
                    Port:     ${optimize.config.agent.port}
                COMMON-COMPONENT-ENDPOINTS-MWS:
                  "@alias":   MWS
                  Transport:
                    Protocol: ${optimize.mws.protocol}
                    Host:     ${optimize.mws.host}
                    Port:     ${optimize.mws.port}
                COMMON-COMPONENT-ENDPOINTS-WS-Registry:
                  "@alias":   WS-Registry
                  Transport:
                    Protocol: ${optimize.wsdc.protocol}
                    Host:     ${optimize.wsdc.host}
                    Port:     ${optimize.wsdc.port}
              COMMON-JDBC:
                COMMON-JDBC-${optimize.jdbc.pool.alias}:
                  Pool:
                    "@alias": ${optimize.jdbc.pool.alias}
                    Name: ${optimize.jdbc.pool.alias}
                    MinSize: ${jdbc.pool.minSize}
                    MaxSize: ${jdbc.pool.maxSize}
                    MaxIdleTime: ${jdbc.pool.maxIdleTime}
                    RampUpDelay: ${jdbc.pool.rampUpDelay}
                    Retries: ${jdbc.pool.retries}
                    RetriesBackoff: ${jdbc.pool.retriesBackoff}
                    MaxStatementsInCache: ${jdbc.pool.maxStatementsInCache}
                    DatabaseServer:
                      "@type" : ${optimize.db.type}
                      Host: ${db.host}
                      PortNumber: ${db.port}
                      URL: "${db.url}"
                      User: ${db.username}
                      Password: ${db.password}
              COMMON-DBFUNCTION:
                COMMON-DBFUNCTION-AnalysisEngine:
                  Function:
                    "@alias": analysis.engine
                    Description: 'Map to Analysis database pool'
                    PoolAlias: ${optimize.jdbc.pool.alias}
                COMMON-DBFUNCTION-CommonDirectory:
                  Function:
                    "@alias": common.directory
                    Description: 'Map to MWS database pool'
                    PoolAlias: ${optimize.jdbc.pool.alias}
                COMMON-DBFUNCTION-ProcessHistory:
                  Function:
                    "@alias": process.history
                    Description: 'Map to Process Tracker database pool'
                    PoolAlias: ${optimize.jdbc.pool.alias}
                COMMON-DBFUNCTION-ProcessModel:
                  Function:
                    "@alias": process.model
                    Description: 'Map to Process Audit database pool'
                    PoolAlias: ${optimize.jdbc.pool.alias}
                COMMON-DBFUNCTION-ProcessWork:
                  Function:
                    "@alias": process.work
                    Description: 'Map to Process Tracker database pool'
                    PoolAlias: ${optimize.jdbc.pool.alias}


provision:
  default:
    runtime: ${nodes}
    