/*
* Copyright 2013 - 2018 Software AG, Darmstadt, Germany and/or its licensors
*
* SPDX-License-Identifier: Apache-2.0
*
*   Licensed under the Apache License, Version 2.0 (the "License");
*   you may not use this file except in compliance with the License.
*   You may obtain a copy of the License at
*
*       http://www.apache.org/licenses/LICENSE-2.0
*
*   Unless required by applicable law or agreed to in writing, software
*   distributed under the License is distributed on an "AS IS" BASIS,
*   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*   See the License for the specific language governing permissions and
*   limitations under the License.                                                            
*
*/

// curl -X POST -F "jenkinsfile=<infrastructure/Jenkinsfile" http://ccbvtauto.eur.ad.sag:8080/pipeline-model-converter/validate

pipeline {
    agent none
    parameters {
        choice(choices: '10.3-sic\n10.3\n10.2\n10.1', description: 'Build images for this release', name: 'TAG')
    }
    environment {
        REG = 'daerepository03.eur.ad.sag:4443/ccdevops'

        // version of the Command Central docker images build/release
        CC_TAG = '10.3'

        REPO_FIX = 'GA_Fix_Repo'
        REPO_HOST = 'aquarius-bg.eur.ad.sag'
        REPO_PRODUCT = '103oct2018_SIC'
        FIXES = '[]'

        LICENSES_URL = "http://irepo.eur.ad.sag/projects/DEVOPS/repos/command-central/raw/licenses/sag10-rnd-lnx-licenses.zip?at=refs%2Fheads%2Fmaster"
    }
    stages {
        stage("Infrastructure Images") {
            agent { label: 'docker' }
            steps {
                checkout scm
                dir ('infrastructure') {
                    sh "docker-compose -f docker-compose.yml staging.yml config"
                    sh "docker-compose -f docker-compose.yml staging.yml build --pull"
                    sh "docker-compose push"
                }
            }
        }        
    }
    post {
        success {
			script { 
	            build job: 'cc-docker-staging', parameters: [string(name: 'TAG', value: "${env.TAG}")], propagate: false, wait: false
	        }
        }
    }    
}
