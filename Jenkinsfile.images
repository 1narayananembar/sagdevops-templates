#!/usr/bin/env groovy
// curl -X POST -F "jenkinsfile=<Jenkinsfile.images" http://ccbvtauto.eur.ad.sag:8080/pipeline-model-converter/validate

def buildImages(org, templates) {
    for (t in templates) {
        dir("templates/$t") {
            docker.withRegistry("${env.DOCKER_REGISTRY_URL}", "${env.DOCKER_REGISTRY_CREDS}") {
                def customImage = docker.build("${org}/${t}:${env.VERSION}.${env.BUILD_NUMBER}", 
                    "--pull \
                    --build-arg RELEASE=${env.RELEASE} \
                    --build-arg SAG_AQUARIUS='${env.SAG_AQUARIUS}' \
                    --build-arg LICENSES_URL='${env.LICENSES_URL}' \
                    . ")
                customImage.push()
            }
        }
    }   
}

pipeline {
    agent {
        label 'docker'
    }
    environment {
        RELEASE='10.2'

        SAG_AQUARIUS = 'aquarius-bg.eur.ad.sag' // internal SDC
        CC_INSTALLER_URL = "http://aquarius-bg.eur.ad.sag/cc/installers" // internal download site
        CC_INSTALLER = 'cc-def-10.2-milestone-lnxamd64'
        LICENSES_URL="http://irepo.eur.ad.sag/projects/DEVOPS/repos/command-central/raw/licenses/sag10-rnd-all-licenses.zip?at=refs%2Fheads%2Frelease%2F101oct2017"

        DOCKER_REGISTRY_URL = 'https://daerepository03.eur.ad.sag:4443' // internal docker registry
        DOCKER_REGISTRY_CREDS = 'docker-registry'

        EMPOWER = credentials('empower')

        COMPOSE_PROJECT_NAME = 'sagdevops-templates'
    }
    stages {
        stage("Build") {
            parallel {
                stage('Universal Messaging') {
                    steps {
                        buildImages('ccdevops', ['sag-um-server'])
                    }
                }
            }
        }
    }
}
