#!/usr/bin/env groovy
// curl -X POST -F "jenkinsfile=<Jenkinsfile.images" http://ccbvtauto.eur.ad.sag:8080/pipeline-model-converter/validate

def buildImages(templates) {
    for (t in templates) {
        dir("templates/$t") {
            sh "docker build -t $t ."
        }
    }   
}

pipeline {
    agent {
        label 'docker'
    }
    environment {
        SAG_AQUARIUS = 'aquarius-bg.eur.ad.sag'
        EMPOWER = credentials('empower')
        COMPOSE_PROJECT_NAME = 'sagdevops-templates'

        RELEASE='10.2'
        VERSION='10.2.0.0'
        REPO_PRODUCTS_URL="http://aquarius-bg.eur.ad.sag/dataserveSuiteInt/repository"
        REPO_PRODUCTS_USERNAME='latest'
        REPO_PRODUCTS_PASSWORD='latest'
        REPO_FIXES_URL="http://aquarius-bg.eur.ad.sag/updates/GA_Fix_Repo"
        REPO_FIXES_USERNAME='sum'
        REPO_FIXES_PASSWORD='sum'
        LICENSES_URL="http://irepo.eur.ad.sag/projects/DEVOPS/repos/command-central/raw/licenses/sag10-rnd-all-licenses.zip?at=refs%2Fheads%2Frelease%2F101oct2017"
    }
    stages {
        stage("Build") {
            parallel {
                stage('Universal Messaging') {
                    steps {
                        buildImages(['sag-um-server'])
                    }
                }
            }
        }
    }
}
