language: minimal
sudo: required
services:
- docker
env:
  global:
  - CC_TAG=10.3
  - TAG=10.3
  - FIXES=ALL
  - REG=softwareag
  - secure: F+/GxzI2vu+wo9ZSXzgqD3Ui8YoW6nrM3S37FM9C44NA1+perNStCkyZzPN6ngK3hJKonbsmABfvj6NCml6lZBQ2LBKA3D1k3JEy0Tr0yNhW1aFCN2IVF8TrjmVb6DyGJTeEIV4hwoI3XFSsnLonnBz+HPuIy+dtUYQEEbqNT1Vw4zk3hzUCbR0fW9JEOrHNADwHu2pnswtTcl4YUeuznYf1JE5NHMfswHufTxsQ53eRbwoiX58L3veWN36L/0rRVekUp24T/PZIIdSO7VB7gLK81uXsxmmjnivZlsyq2SUv8uHhFrOGpI5lBLJXiwiMCMApKrVCemWL0SZD06cBZ0N+EOHgox+wl4WxNUxfpwN0YsruPMLwSTMo+ngYRB5Tb+MH0eH58q7NztJu73e3ObGduG+KROWR3KNLnoFmbHvreyBJChAmzScxi/RlhvRLV5lJiMA7Kl4aDfWPJJNh02c6C9c9AGoniNJC9iq4WV2ReeFff1LqZdRIF0O4nHBJ83Gjpn8dNb2YE6SZD0qWqiNey0NfdolKHjKTQr6iRn/ftQx7Zaw72v0Yf/cBSD31VWQBF72NaL4FCWYa0JUTOR41s+Gc5rTI3XaqV/PToB8PJr5xVuCzJyDjPOIb9y1bmmcxErQ6BHjx6xDxToak2t7nL9Sdb3wNqgnIaGWt94o=
  - secure: CMYOrQVA6oMWAbUwMbGVOrkN6E+GlddfvDOcnQ/C3+NKZUffhMC+ZwjT723CwcQrIfRu0k47HCI+74NnOZB+BraX0W+Me5fX/4yuBF+zMj/bXXrcpBa6Qqi8mkpH6KEnmrrYbXaiMS8oe7MJIU1Mg612HXorgTKiB2+D4L3tRNFvU3VZ/RvsyrmzqLvFLMl6q8+5Pp95go23N9LW1TfE7zgP/PM7PDum8azz1J0bQ6i5qeBeV7gej0j6y/Vcc8h5q8gHS1ZT8NASdNLaUn/+ZvBcA6p4czHjrzUC1o6DX4duEuXoY1coIUxg4fZcFrVhIP5/3pKroc6j9KH1qJRPY1r/ZGPViL+HdAFeSljYcG4Mgwn++eupMYjoqx1+zlHgNJKRHmprWM2aJZ+ceKXjudqVCKesK3zxlmm4DCESBDUkpxmRn03K2bBvDxhVZcNPhFArwDwJEtzFdVL/ypeEEHFXyJGVY7lHpE2Bsek43S7o3QTGkgbl7aE2/t0DOLqyzSzbLHekK85nCkKqbzKcdQynQ/GIBHXH1cjwZGbhIKWAabza75F6ubjw/GnBTMpUIDyL1WfO5Mv4gxnsja3GE9mQdo40jjJ7r/JpDjwK5D4yGs96u0Sn5d4Y5TWhiMSJaZJFp7e6xt3J5/eOEZFvgfPz4cvBt7VfHIY0DIeiX7Q=
  # matrix:
  # - IMAGE=universal-messaging
  # - IMAGE=integration-server
  matrix:
  - T=hello-world
  - T=sag-um-server
  - T=sag-msc-server
  - T=sag-is-server
  - T=sag-tc-server
  - T=sag-apama-correlator
  - T=sag-abe
  - T=sag-apigateway-server
  - T=sag-internaldatastore

# stages:
# - infra
# - test
# - deploy
before_install: docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"

script:
- ./provisionw $T

# script:
# - cd containers && echo "Building and testing $IMAGE:$TAG"
# - docker-compose build $IMAGE && docker-compose push $IMAGE
# jobs:
#   include:
#   - stage: infra
#     env:
#     - IMAGE=none
#     script:
#     - cd licenses && openssl aes-256-cbc -K $encrypted_11f35f1fe671_key -iv $encrypted_11f35f1fe671_iv
#       -in licenses.zip.enc -out licenses.zip -d && cd ..
#     - cd infrastructure && export COMPOSE_FILE="docker-compose.yml:master.yml:${TAG}.master.yml"
#     - docker-compose build && docker-compose push
#   - stage: deploy
#     env:
#     - IMAGE=none
#     - NET=sagcc_default
#     script:
#     - cd deployments/docker
#     - docker-compose -f sag-cc/docker-compose.yml up -d
#     - docker-compose -f sag-um-is-push/docker-compose.yml run --rm init
